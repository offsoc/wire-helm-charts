# Variables to set locaL PVC Oon kubenode for Prometheus storage
# If this values get modified, please adjust the `nodename` and `storage` in the prometheusSpec:
nodeName: kubenode3
storageSize: 50Gi
volumeMountPath: /mnt/prometheus-data

# This is the values.yaml file for the Prometheus stack Helm chart.
kube-prometheus-stack:
  prometheus:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-http01 # cluster issuer name
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth
        nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Prometheus"
      ingressClassName: nginx
      hosts:
        - "prometheus.<domain_name>" #replace with your domain
      # The secretName is used to store the TLS certificate and key for the Prometheus ingress.
      path: /
      tls:
      - hosts:
        - prometheus.<domain_name> #replace with your domain
        secretName: <tls_secret_name> # replace with your preferred secret name (eg. prometheus-tls-cert), cert-manager will create this automatically
    service:
      type: ClusterIP
    
    prometheusSpec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - kubenode3 
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: local-storage
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi

      retention: 15d
      retentionSize: 45GiB
  # Both Grafana and Alertmanager is disabled in this configuration.
  grafana:
    enabled: false
  alertmanager:
    enabled: false
  # This section is used to create a secret for basic authentication in the Prometheus ingress.
  # The secret contains a base64 encoded username and password.
  # NOTE: crete this secret using the following command:
  # htpasswd -nb admin <secure_password> | base64
  extraManifests:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: prometheus-basic-auth
        namespace: monitoring # replace with your namespace
      type: Opaque
      data:
        auth: <base64_encoded_username_password> # replace with your base64 encoded username and password
